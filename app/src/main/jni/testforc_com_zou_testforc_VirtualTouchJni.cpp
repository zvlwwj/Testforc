/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <stddef.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/un.h>
#include <unistd.h>
#include<android/log.h>
/* Header for class testforc_com_zou_testforc_VirtualTouchJni */

#define DEFAULT_SOCKET_NAME "minitouch"
#define LOG_TAG "VirtualTouchJni"
#ifndef _Included_testforc_com_zou_testforc_VirtualTouchJni
#define _Included_testforc_com_zou_testforc_VirtualTouchJni
#ifdef __cplusplus
extern "C" {
#endif

int fd = 0;
/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    down
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_down
  (JNIEnv *env, jobject jobj, jint id, jint x, jint y, jint press)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "down");
    char str_id[20];
    char str_x[20];
    char str_y[20];
    char str_press[20];
    char str_dest[20];
    sprintf(str_id, "%d", (int)id);
    sprintf(str_x, "%d", (int)x);
    sprintf(str_y, "%d", (int)y);
    sprintf(str_press, "%d", (int)press);
    strcpy(str_dest, "d ");
    strcat(str_dest,str_id);
    strcat(str_dest," ");
    strcat(str_dest,str_x);
    strcat(str_dest," ");
    strcat(str_dest,str_y);
    strcat(str_dest," ");
    strcat(str_dest,str_press);
    strcat(str_dest,"\n");
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "str_dest : %s",str_dest);
    if (write(fd, str_dest, sizeof(str_dest)) < 0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "write error");
        exit(-1);
    }
}

/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    move
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_move
  (JNIEnv *env, jobject jobj, jint id, jint x, jint y, jint press)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "press");
    char str_id[20];
    char str_x[20];
    char str_y[20];
    char str_press[20];
    char str_dest[20];
    sprintf(str_id, "%d", (int)id);
    sprintf(str_x, "%d", (int)x);
    sprintf(str_y, "%d", (int)y);
    sprintf(str_press, "%d", (int)press);
    strcpy(str_dest, "m ");
    strcat(str_dest,str_id);
    strcat(str_dest," ");
    strcat(str_dest,str_x);
    strcat(str_dest," ");
    strcat(str_dest,str_y);
    strcat(str_dest," ");
    strcat(str_dest,str_press);
    strcat(str_dest,"\n");
    if (write(fd, str_dest, sizeof(str_dest)) < 0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "write error");
        exit(-1);
    }
}

/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    up
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_up
  (JNIEnv *env, jobject jobj, jint id)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "up");
    char str_id[20];
    char str_dest[20];
    sprintf(str_id, "%d", (int)id);
    strcpy(str_dest, "u ");
    strcat(str_dest,str_id);
    strcat(str_dest,"\n");
    if (write(fd, str_dest, sizeof(str_dest)) < 0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "write error");
        exit(-1);
    }
}

/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    commit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_commit
  (JNIEnv *env, jobject jobj)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "commit");
    char str_dest[20];
    strcpy(str_dest, "c\n");
    if (write(fd, str_dest, sizeof(str_dest)) < 0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "write error");
        exit(-1);
    }
}

/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    connect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_connect
(JNIEnv *env, jobject jobj)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "connect");
    char *socket_name = DEFAULT_SOCKET_NAME;
    struct sockaddr_un un;
    if((fd = socket(AF_UNIX,SOCK_STREAM,0))<0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "socket error");
        exit(1);
    }
    memset(&un, 0, sizeof(un));
    un.sun_family = AF_UNIX;
    strncpy(&un.sun_path[1], socket_name, strlen(socket_name));
    if (connect(fd, (struct sockaddr *) &un, sizeof(sa_family_t)+strlen(socket_name)+1) < 0)
    {
        __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "connect error");
        exit(-1);
    }
}

/*
 * Class:     testforc_com_zou_testforc_VirtualTouchJni
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_testforc_com_zou_testforc_VirtualTouchJni_close
  (JNIEnv *env, jobject jobj)
{
    __android_log_print(ANDROID_LOG_INFO, LOG_TAG, "close");
    close(fd);
}

#ifdef __cplusplus
}
#endif
#endif
